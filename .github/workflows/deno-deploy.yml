name: ü¶ï Deno

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - ".github/**"
      - "!.github/workflows/deno-deploy.yml"
      - ".env.example"
      - ".eslintrc.cjs"
      - ".prettierignore"
      - "README.md"
      - "wrangler.toml"
      - "fly.toml"
      - "node.Dockerfile"
      - "deno.Dockerfile"
      - ".vscode/*"
      - ".husky/*"
      - ".prettierrc.json"
      - "LICENSE"
      - "run"
  workflow_dispatch:
    inputs:
      deploy-mode:
        description: 'Deploy via action or auto'
        required: false
        default: 'action'
        type: choice
        options:
        - action
        - auto
      git-ref:
        description: 'Git branch / tag / commit (used for auto deploy-mode)'
        required: false
        default: 'main'
      deployment-type:
        description: 'Deploy branch (used for auto deploy-mode)'
        required: false
        default: 'dev'
        type: choice
        options:
        - dev
        - live

env:
  DEPLOY_MODE: 'action'
  PROJECT_NAME: ${{ secrets.DENO_PROJECT_NAME || 'rdns' }}
  BUILD_BRANCH: >
    ${{ github.event_name == 'workflow_dispatch' &&
      github.event.inputs.deployment-type == 'live' &&
      'build/deno-deploy/live' || 'build/deno-deploy/dev' }}
  IN_FILE: 'src/server-deno.ts'
  OUT_FILE: 'rethinkdns.js'

permissions:
  contents: read

jobs:
  deploy:
    name: üåØ Deno Deploy
    runs-on: ubuntu-latest
    permissions:
      # needed for auth with deno.com
      id-token: write
      # needed to clone repo
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          egress-policy: audit

      - name: üöö Fetch code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ github.event.inputs.git-ref || github.ref }}
          fetch-depth: 0

      - name: üèù Setup env
        shell: bash
        run: |
          echo "DEPLOY_MODE=${DM}" >> $GITHUB_ENV
          echo "::notice::deploy mode: $DM, project: $PROJECT_NAME"
        env:
          DM: ${{ github.event.inputs.deploy-mode || env.DEPLOY_MODE }}

      - name: üß∞ Checkout deploy-branch
        if: ${{ env.DEPLOY_MODE == 'auto' }}
        run: |
          git fetch --all
          git checkout --orphan ${BUILD_BRANCH} || git checkout ${BUILD_BRANCH}
          git reset
          git merge origin/${BUILD_BRANCH} || :

      - name: ü¶ï Install Deno @1.29
        uses: denoland/setup-deno@5fae568d37c3b73449009674875529a984555dd1 # main
        with:
          deno-version: 1.44.4

      - name: üì¶ Bundle up
        if: ${{ env.DEPLOY_MODE == 'action' }}
        run: |
          echo "::notice::do not forget to set DENO_PROJECT_NAME via github secrets!"
          deno task prepare
          deno bundle ${IN_FILE} ${OUT_FILE}
        shell: bash

      # github.com/denoland/deployctl/blob/febd898/action.yml
      # step output: www.actionsbyexample.com/outputs.html
      - name: ü§∏üèº Deploy to deno.com
        id: dd
        if: ${{ env.DEPLOY_MODE == 'action' }}
        uses: denoland/deployctl@612f83df2b874c6908d68de5cf3f36a6538fa8f7 # 1.12.0
        with:
          project: ${{ env.PROJECT_NAME }}
          entrypoint: ${{ env.OUT_FILE }}

      - name: üö¢ Merge latest code into deploy-branch
        if: ${{ env.DEPLOY_MODE == 'auto' }}
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'
          git add ${OUT_FILE}
          git commit -m "Update bundle for ${GITHUB_SHA}" && \
            echo "::notice::Pushing to ${BUILD_BRANCH}" || \
            echo "::notice::No changes to commit"
          git push origin ${BUILD_BRANCH}
